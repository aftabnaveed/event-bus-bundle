services:
  _defaults:
    public: true
#  single.command.handler:
  Bruli\EventBusBundleTests\Behaviour\SingleCommandHandler:
    tags:
      - {name: bruli.command_handler, handles: \Bruli\EventBusBundleTests\Behaviour\SingleCommand }
#  with.pre.middleware.handler:
  Bruli\EventBusBundleTests\Behaviour\WithPreMiddleWareHandler:
    tags:
      - { name: bruli.command_handler, handles: \Bruli\EventBusBundleTests\Behaviour\WithPreMiddleWareCommand }
#  pre.middleware.handler:
  Bruli\EventBusBundleTests\Behaviour\PreMiddleWareHandler:
    tags:
      - { name: bruli.command_pre_middleware, handles: \Bruli\EventBusBundleTests\Behaviour\WithPreMiddleWareCommand }
#  pre.second.middleware.handler:
  Bruli\EventBusBundleTests\Behaviour\PreSecondMiddleWareHandler:
    tags:
      - { name: bruli.command_pre_middleware, handles: \Bruli\EventBusBundleTests\Behaviour\WithPreMiddleWareCommand }
#  with.post.middleware.handler:
  Bruli\EventBusBundleTests\Behaviour\WithPostMiddleWareHandler:
    tags:
      - { name: bruli.command_handler, handles: \Bruli\EventBusBundleTests\Behaviour\WithPostMiddleWareCommand }
#  post.middleware.handler:
  Bruli\EventBusBundleTests\Behaviour\PostMiddleWareHandler:
    tags:
      - { name: bruli.command_post_middleware, handles: \Bruli\EventBusBundleTests\Behaviour\WithPostMiddleWareCommand }
#  post.second.middleware.handler:
  Bruli\EventBusBundleTests\Behaviour\PostSecondMiddleWareHandler:
    tags:
      - { name: bruli.command_post_middleware, handles: \Bruli\EventBusBundleTests\Behaviour\WithPostMiddleWareCommand }